QUESTION : You are given a string s. You have to find the length of the longest substring with all distinct characters. 

Examples:

Input: s = "geeksforgeeks"
Output: 7
Explanation: "eksforg" is the longest substring with all distinct characters.
Input: s = "aaa"
Output: 1
Explanation: "a" is the longest substring with all distinct characters.
Input: s = "abcdefabcbb"
Output: 6
Explanation: The longest substring with all distinct characters is "abcdef", which has a length of 6.
Constraints:
1 ≤ s.size() ≤ 3*104
All the characters are in lowercase.









  SOLUTION :
class Solution {
  public:
    int longestUniqueSubstr(string &s) {
        // code here
        vector <int> lastIndex(26,-1);
        int maxLen = 0;
        int start = 0;
        
        for (int i =0; i < s.length();i++){
            char ch = s[i];
            
            if (lastIndex[ch - 'a'] >= start){
                start = lastIndex[ch - 'a']+1;
            }
            
            lastIndex[ch - 'a'] = i;
            maxLen = max(maxLen, i - start + 1);
            
        }
        return maxLen;
        
        
        
        
        
    }
};








  
