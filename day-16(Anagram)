problem : Add Binary Strings
Given two binary strings s1 and s2 consisting of only 0s and 1s. Find the resultant string after adding the two Binary Strings.
Note: The input strings may contain leading zeros but the output string should not have any leading zeros.

Input: s1 = "1101", s2 = "111"
Output: 10100
Explanation:
 1101
+ 111
10100
Input: s1 = "00100", s2 = "010"
Output: 110
Explanation: 
  100
+  10
  110
Constraints:
1 ≤s1.size(), s2.size()≤ 106








  solution :  class Solution {
  public:
    string addBinary(string& s1, string& s2) {
        // your code here
        auto trimLeadingZeros = [] (const string &s){
            int i=0;
            while (i <s.size() && s[i] == '0') i++;
            return (i == s.size()) ? "0" : s.substr(i);
        
        };
        s1 = trimLeadingZeros(s1);
        s2= trimLeadingZeros(s2);
        
        int i = s1.size() -1;
        int j = s2.size() -1;
        int carry =0;
        string result;
        
        while (i >=0 || j>=0 || carry){
            int bit1 = (i>=0) ? s1[i--] - '0' : 0;
            int bit2 = (j>=0) ? s2[j--] - '0' : 0;
            
            int sum = bit1 + bit2 + carry;
            carry = sum /2;
            result.push_back((sum%2) + '0');
    
            
        }
        
        
        reverse(result.begin() , result.end());
        return result;
        
    
    }
    
};



